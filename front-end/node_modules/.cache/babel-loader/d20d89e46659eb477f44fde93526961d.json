{"ast":null,"code":"var _jsxFileName = \"/Users/humaid/Documents/Code/CS375 Projects/starlink-tracker-react/front-end/src/Components/DataTable.js\";\n// import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport React from 'react';\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse'; // import Input from '@material-ui/core/Input';\n// import TableSortLabel from '@material-ui/core/TableSortLabel';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n    margin: \"5px\",\n    maxWidth: \"96.35vw\" // maxHeight: \"inherit\",\n\n  },\n  button: {\n    margin: \"30px\"\n  },\n  tableContainerPaper: {\n    margin: \"20px 5px\",\n    maxWidth: \"98vw\",\n    overflowX: \"hidden\" // maxHeight: 500,\n\n  },\n  tableHeader: {\n    minWidth: \"auto\",\n    maxWidth: 100,\n    textAlign: \"center\",\n    fontWeight: \"medium\",\n    fontSize: \"16px\"\n  }\n});\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset'\n    }\n  },\n  tableIdCell: {\n    minWidth: 50,\n    maxWidth: 100,\n    textAlign: \"center\",\n    fontWeight: \"medium\"\n  },\n  tableCell: {\n    minWidth: \"auto\",\n    maxWidth: 100,\n    textAlign: \"center\",\n    fontSize: 14\n  }\n});\n\nfunction createData(SatId, SatName, PositionX, PositionY, PositionZ, VelocityX, VelocityY, VelocityZ) {\n  return {\n    SatId,\n    SatName,\n    PositionX,\n    PositionY,\n    PositionZ,\n    VelocityX,\n    VelocityY,\n    VelocityZ\n  };\n}\n\nfunction Row(data) {\n  const {\n    row\n  } = data;\n  const classesRow = useRowStyles();\n  const [open, setOpen] = React.useState(false);\n  const [userLong, setUserLong] = React.useState(0);\n  const [userLat, setUserLat] = React.useState(0); // const [userAlt, setUserAlt] = React.useState(0);\n\n  const [userAlt] = React.useState(0);\n  const [orbitTime] = React.useState(10);\n  const [orbitRowData, setOrbitRowData] = React.useState([]);\n\n  function rowCollapseClick() {\n    setOpen(!open);\n\n    if (!open) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          setUserLat(position.coords.latitude);\n          setUserLong(position.coords.longitude);\n        });\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n      }\n\n      axios.get(\"/satdata/pos?\" + new URLSearchParams({\n        noradId: row.SatId,\n        userLat: userLat,\n        userLong: userLong,\n        userAlt: userAlt,\n        orbitTime: orbitTime\n      })).then(response => {\n        console.log(response);\n        setOrbitRowData(response.data);\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    key: row.SatId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"expand row\",\n    size: \"small\",\n    onClick: rowCollapseClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, open ? /*#__PURE__*/React.createElement(KeyboardArrowUpIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 55\n    }\n  }))), /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    className: classesRow.tableIdCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, row.SatId), /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, row.SatName), /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, row.PositionX.toFixed(4)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, row.PositionY.toFixed(4)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, row.PositionZ.toFixed(4)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, row.VelocityX.toFixed(4)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, row.VelocityY.toFixed(4)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, row.VelocityZ.toFixed(4))), /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      paddingBottom: 0,\n      paddingTop: 0\n    },\n    colSpan: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    in: open,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    margin: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, \"Orbit Tracking\"), /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    \"aria-label\": \"orbit-track-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, \"Time Stamp\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }, \"Latitude\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }, \"Longitude\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, \"Altitude\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classesRow.tableHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, \"Elevation\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, orbitRowData.map(orbitDataRow => /*#__PURE__*/React.createElement(TableRow, {\n    key: orbitDataRow.orbitTrackId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }\n  }, orbitDataRow.timestamp), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  }, orbitDataRow.satlatitude), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 37\n    }\n  }, orbitDataRow.satlongitude), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 37\n    }\n  }, orbitDataRow.sataltitude), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 37\n    }\n  }, orbitDataRow.elevation))))))))));\n}\n\nclass SatTableComponents extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangePage = (event, newPage) => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        page: 0,\n        rowsPerPage: parseInt(event.target.value, 10)\n      });\n    };\n\n    this.handleVisualiseButtonPress = event => {\n      axios.get(\"/satdata/tle?\", {\n        params: {\n          launchgroup: this.state.launchSelectValue\n        }\n      }).then(response => {\n        let main = document.getElementById(\"main\");\n\n        if (document.getElementById(\"sideBarDiv\")) {\n          main.removeChild(document.getElementById(\"sideBarDiv\"));\n        }\n\n        if (document.getElementById(\"root\").style.display !== \"none\") {\n          document.getElementById(\"root\").style.display = \"none\";\n        }\n\n        let mainDiv = document.getElementById(\"mainDiv\");\n\n        while (mainDiv.childElementCount !== 0) {\n          mainDiv.removeChild(mainDiv.lastChild);\n        }\n\n        let mapDiv = document.getElementById(\"mapDiv\");\n\n        while (mapDiv.childElementCount !== 0) {\n          mapDiv.removeChild(mapDiv.lastChild);\n        } // addSideBar();\n        // toggleSideBar()\n\n\n        let newFrame = document.createElement(\"iframe\");\n        newFrame.id = \"iframeMap\";\n        newFrame.frameBorder = \"0\";\n        newFrame.scrolling = \"no\";\n        newFrame.marginheight = \"0\";\n        newFrame.marginwidth = \"0\";\n        newFrame.src = \"maps.html\";\n        mapDiv.appendChild(newFrame);\n      });\n    };\n\n    this.state = {\n      launchGroupList: [],\n      launchSelectValue: '',\n      satTrackingData: [],\n      rowsPerPage: 5,\n      page: 0,\n      btnState: true\n    };\n    this.handleChangeLaunchlist = this.handleChangeLaunchlist.bind(this);\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n    this.handleVisualiseButtonPress = this.handleVisualiseButtonPress.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"/frontend/launchlist\").then(response => {\n      // console.log(response.data);\n      this.setState({\n        launchGroupList: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  handleChangeLaunchlist(event) {\n    // console.log(this.state.launchGroupList[e.target.value])\n    axios.get(\"/satdata/tle?\", {\n      params: {\n        launchgroup: this.state.launchGroupList[event.target.value]\n      }\n    }).then(response => {\n      // console.log(response.data.sat); // Outputs satJson to browser console\n      let rawData = response.data.sat;\n      let tableData = [];\n      rawData.forEach(satRawRow => {\n        let rowDataPosition = satRawRow.tableData[\"position\"];\n        let rowDataVelocity = satRawRow.tableData[\"velocity\"];\n        tableData.push(createData(satRawRow[\"id\"], satRawRow[\"satName\"], rowDataPosition[\"x\"], rowDataPosition[\"y\"], rowDataPosition[\"z\"], rowDataVelocity[\"x\"], rowDataVelocity[\"y\"], rowDataVelocity[\"z\"]));\n      });\n\n      if (response.data.sat) {\n        console.log(event.target.value);\n        console.log(this.state.launchGroupList);\n        this.setState({\n          btnState: false,\n          satTrackingData: tableData,\n          launchSelectValue: this.state.launchGroupList[event.target.value].toString()\n        });\n      } // console.log(this.state.launchSelectValue);\n\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      satTrackingData,\n      page,\n      rowsPerPage,\n      btnState,\n      launchSelectValue\n    } = this.state; // const emptyRows = rowsPerPage - Math.min(rowsPerPage, satTrackingData.length - page * rowsPerPage);\n\n    console.log(launchSelectValue);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"launch-group-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 25\n      }\n    }, \"Launch Group\"), /*#__PURE__*/React.createElement(Select, {\n      id: \"launch-group-dropdown\",\n      name: \"launch-group-dropdown\",\n      value: \"\" // value={launchSelectValue}\n      ,\n      onChange: this.handleChangeLaunchlist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"header\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 29\n      }\n    }), this.state.launchGroupList.map((item, index) => /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 33\n      }\n    }, item)), \";\"), /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, \"Required\")), /*#__PURE__*/React.createElement(Button, {\n      disabled: btnState,\n      variant: \"contained\",\n      id: \"visualiseButton\",\n      className: classes.button,\n      color: \"default\",\n      onClick: this.handleVisualiseButtonPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }\n    }, \"Visualize Satellite Positions\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      className: classes.tableContainerPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      stickyHeader: true,\n      className: classes.table,\n      size: \"small\",\n      \"aria-label\": \"a dense table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 33\n      }\n    }, \"Satellite\\xA0ID\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 33\n      }\n    }, \"Sat\\xA0Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 33\n      }\n    }, \"Position\\xA0(X)\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 33\n      }\n    }, \"Position\\xA0(X)\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 33\n      }\n    }, \"Position\\xA0(X)\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 33\n      }\n    }, \"Velocity\\xA0(X)\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 33\n      }\n    }, \"Velocity\\xA0(X)\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 33\n      }\n    }, \"Velocity\\xA0(X)\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 25\n      }\n    }, satTrackingData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/React.createElement(Row, {\n      key: row.name,\n      row: row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25, 50],\n      component: \"div\",\n      count: satTrackingData.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\n; // SatTableComponents.propTypes = {\n//     classes: PropTypes.object.isRequired,\n//   };\n\nexport default withStyles(styles)(SatTableComponents);","map":{"version":3,"sources":["/Users/humaid/Documents/Code/CS375 Projects/starlink-tracker-react/front-end/src/Components/DataTable.js"],"names":["React","axios","withStyles","makeStyles","InputLabel","MenuItem","FormHelperText","FormControl","Select","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","Button","IconButton","KeyboardArrowDownIcon","KeyboardArrowUpIcon","Typography","Box","Collapse","styles","theme","root","display","flexWrap","width","margin","spacing","formControl","minWidth","selectEmpty","marginTop","table","maxWidth","button","tableContainerPaper","overflowX","tableHeader","textAlign","fontWeight","fontSize","useRowStyles","borderBottom","tableIdCell","tableCell","createData","SatId","SatName","PositionX","PositionY","PositionZ","VelocityX","VelocityY","VelocityZ","Row","data","row","classesRow","open","setOpen","useState","userLong","setUserLong","userLat","setUserLat","userAlt","orbitTime","orbitRowData","setOrbitRowData","rowCollapseClick","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","get","URLSearchParams","noradId","then","response","toFixed","paddingBottom","paddingTop","map","orbitDataRow","orbitTrackId","timestamp","satlatitude","satlongitude","sataltitude","elevation","SatTableComponents","Component","constructor","props","handleChangePage","event","newPage","setState","page","handleChangeRowsPerPage","rowsPerPage","parseInt","target","value","handleVisualiseButtonPress","params","launchgroup","state","launchSelectValue","main","document","getElementById","removeChild","style","mainDiv","childElementCount","lastChild","mapDiv","newFrame","createElement","id","frameBorder","scrolling","marginheight","marginwidth","src","appendChild","launchGroupList","satTrackingData","btnState","handleChangeLaunchlist","bind","componentDidMount","catch","error","rawData","sat","tableData","forEach","satRawRow","rowDataPosition","rowDataVelocity","push","toString","render","classes","item","index","slice","name","length"],"mappings":"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","sourcesContent":["// import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport React from 'react';\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';// import Input from '@material-ui/core/Input';\n// import TableSortLabel from '@material-ui/core/TableSortLabel';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Switch from '@material-ui/core/Switch';\n\n\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width: '100%',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 150,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    table: {\n        margin: \"5px\",\n        maxWidth: \"96.35vw\",\n        // maxHeight: \"inherit\",\n    },\n    button: {\n        margin: \"30px\",\n    },\n    tableContainerPaper: {\n        margin: \"20px 5px\",\n        maxWidth: \"98vw\",\n        overflowX: \"hidden\",\n        // maxHeight: 500,\n    },\n    tableHeader: {\n        minWidth: \"auto\",\n        maxWidth: 100,\n        textAlign: \"center\",\n        fontWeight: \"medium\",\n        fontSize: \"16px\",\n    }\n});\n\nconst useRowStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n    tableIdCell: {\n        minWidth: 50,\n        maxWidth: 100,\n        textAlign: \"center\",\n        fontWeight: \"medium\",\n    },\n    tableCell: {\n        minWidth: \"auto\",\n        maxWidth: 100,\n        textAlign: \"center\",\n        fontSize: 14,\n    },\n});\n\nfunction createData(SatId, SatName, PositionX, PositionY, PositionZ, VelocityX, VelocityY, VelocityZ) {\n    return { SatId, SatName, PositionX, PositionY, PositionZ, VelocityX, VelocityY, VelocityZ };\n}\n\n\n\nfunction Row(data) {\n    const { row } = data;\n    const classesRow = useRowStyles();\n    const [open, setOpen] = React.useState(false);\n    const [userLong, setUserLong] = React.useState(0);\n    const [userLat, setUserLat] = React.useState(0);\n    // const [userAlt, setUserAlt] = React.useState(0);\n    const [userAlt] = React.useState(0);\n    const [orbitTime] = React.useState(10);\n    const [orbitRowData, setOrbitRowData] = React.useState([])\n\n    \n    function rowCollapseClick() {\n\n        setOpen(!open);\n\n        if (!open) {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    setUserLat(position.coords.latitude);\n                    setUserLong(position.coords.longitude);\n                });\n            } else { \n                console.log(\"Geolocation is not supported by this browser.\");\n            }\n            \n            axios.get(\"/satdata/pos?\" + new URLSearchParams({\n                noradId: row.SatId,\n                userLat : userLat,\n                userLong : userLong,\n                userAlt : userAlt,\n                orbitTime : orbitTime,\n            }))\n            .then((response) => {\n                console.log(response);\n                setOrbitRowData(response.data)\n            })\n        } \n    }\n\n    return (\n        <React.Fragment>\n        <TableRow hover key={row.SatId}>\n            <TableCell className={classesRow.tableCell}>\n                <IconButton \n                    aria-label=\"expand row\" \n                    size=\"small\" \n                    onClick={rowCollapseClick}\n                >\n                    {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                </IconButton>\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" className={classesRow.tableIdCell}>\n                {row.SatId}\n            </TableCell>\n            <TableCell className={classesRow.tableCell}>{row.SatName}</TableCell>\n            <TableCell className={classesRow.tableCell}>{row.PositionX.toFixed(4)}</TableCell>\n            <TableCell className={classesRow.tableCell}>{row.PositionY.toFixed(4)}</TableCell>\n            <TableCell className={classesRow.tableCell}>{row.PositionZ.toFixed(4)}</TableCell>\n            <TableCell className={classesRow.tableCell}>{row.VelocityX.toFixed(4)}</TableCell>\n            <TableCell className={classesRow.tableCell}>{row.VelocityY.toFixed(4)}</TableCell>\n            <TableCell className={classesRow.tableCell}>{row.VelocityZ.toFixed(4)}</TableCell>\n        </TableRow>\n\n        <TableRow hover>\n            <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={9}>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <Box margin={1}>\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\n                        Orbit Tracking\n                    </Typography>\n                    <Table size=\"small\" aria-label=\"orbit-track-table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classesRow.tableHeader} >Time Stamp</TableCell>\n                                <TableCell className={classesRow.tableHeader} >Latitude</TableCell>\n                                <TableCell className={classesRow.tableHeader} >Longitude</TableCell>\n                                <TableCell className={classesRow.tableHeader} >Altitude</TableCell>\n                                <TableCell className={classesRow.tableHeader} >Elevation</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {orbitRowData.map((orbitDataRow) => (\n                                <TableRow key={orbitDataRow.orbitTrackId}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {orbitDataRow.timestamp}\n                                    </TableCell>\n                                    <TableCell>{orbitDataRow.satlatitude}</TableCell>\n                                    <TableCell>{orbitDataRow.satlongitude}</TableCell>\n                                    <TableCell>{orbitDataRow.sataltitude}</TableCell>\n                                    <TableCell>{orbitDataRow.elevation}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Box>\n            </Collapse>\n            </TableCell>\n        </TableRow>    \n        </React.Fragment>\n    );\n}\n\nclass SatTableComponents extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            launchGroupList: [],\n            launchSelectValue: '',\n            satTrackingData: [],\n            rowsPerPage: 5,\n            page: 0,\n            btnState: true,\n        };\n\n        this.handleChangeLaunchlist = this.handleChangeLaunchlist.bind(this);  \n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n        this.handleVisualiseButtonPress = this.handleVisualiseButtonPress.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(\"/frontend/launchlist\")\n        .then(response => {\n            // console.log(response.data);\n            this.setState({\n                launchGroupList: response.data\n            });\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    handleChangeLaunchlist(event) {\n        // console.log(this.state.launchGroupList[e.target.value])\n        axios.get(\"/satdata/tle?\", {\n            params: {\n                launchgroup: this.state.launchGroupList[event.target.value],\n            }\n        })\n        .then((response) => {                \n            // console.log(response.data.sat); // Outputs satJson to browser console\n            \n            let rawData = response.data.sat;\n            let tableData = [];\n            \n            \n            rawData.forEach((satRawRow) => {\n                let rowDataPosition = satRawRow.tableData[\"position\"];\n                let rowDataVelocity = satRawRow.tableData[\"velocity\"];\n                tableData.push(createData(satRawRow[\"id\"], satRawRow[\"satName\"], rowDataPosition[\"x\"], rowDataPosition[\"y\"], rowDataPosition[\"z\"], rowDataVelocity[\"x\"], rowDataVelocity[\"y\"], rowDataVelocity[\"z\"]));\n            })\n\n            if (response.data.sat) {\n                console.log(event.target.value);\n                console.log(this.state.launchGroupList);\n                this.setState({\n                    btnState: false,\n                    satTrackingData: tableData,\n                    launchSelectValue: (this.state.launchGroupList[event.target.value]).toString(),\n                });\n            }\n            // console.log(this.state.launchSelectValue);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    };\n\n    handleChangePage = (event, newPage) => {\n        this.setState({page: newPage})\n    };\n    \n    handleChangeRowsPerPage = (event) => {\n        this.setState({\n            page: 0,\n            rowsPerPage: parseInt(event.target.value, 10),\n        })\n    };\n\n    handleVisualiseButtonPress = (event) => {\n        axios.get(\"/satdata/tle?\", {\n            params: {\n                launchgroup: this.state.launchSelectValue,\n            }\n        })\n        .then((response) => {\n            let main = document.getElementById(\"main\");\n            if (document.getElementById(\"sideBarDiv\")) {\n                main.removeChild(document.getElementById(\"sideBarDiv\"));\n            }\n        \n            if (document.getElementById(\"root\").style.display !== \"none\") {\n                document.getElementById(\"root\").style.display =\"none\"\n            }\n        \n            let mainDiv = document.getElementById(\"mainDiv\");\n            while (mainDiv.childElementCount !== 0) {\n                mainDiv.removeChild(mainDiv.lastChild);\n            }\n        \n            let mapDiv = document.getElementById(\"mapDiv\");\n            while (mapDiv.childElementCount !== 0) {\n                mapDiv.removeChild(mapDiv.lastChild);\n            }\n        \n            // addSideBar();\n            // toggleSideBar()\n        \n            let newFrame = document.createElement(\"iframe\");\n            newFrame.id = \"iframeMap\";\n            newFrame.frameBorder=\"0\";\n            newFrame.scrolling=\"no\";\n            newFrame.marginheight=\"0\";\n            newFrame.marginwidth=\"0\";\n            newFrame.src=\"maps.html\";\n            mapDiv.appendChild(newFrame);\n        })\n    };\n\n    render () {\n        const { classes } = this.props;\n        const { satTrackingData, page, rowsPerPage, btnState, launchSelectValue } = this.state;\n        // const emptyRows = rowsPerPage - Math.min(rowsPerPage, satTrackingData.length - page * rowsPerPage);\n\n        console.log(launchSelectValue);\n\n        return (\n            <div>\n                <div>\n                    <FormControl required className={classes.formControl}>\n                        <InputLabel htmlFor=\"launch-group-dropdown\">Launch Group</InputLabel>\n                        <Select\n                            id='launch-group-dropdown'\n                            name='launch-group-dropdown'  \n                            value=''                          \n                            // value={launchSelectValue}\n                            onChange={this.handleChangeLaunchlist}\n                        >\n                            {/* <MenuItem key='1' value=\"1\"></MenuItem>\n                            <MenuItem key='2' value=\"2\"></MenuItem>\n                            <MenuItem key='3' value=\"3\"></MenuItem> */}\n                            \n                            <MenuItem key='header' value=\"\"></MenuItem>\n                            {this.state.launchGroupList.map((item, index) => \n                                <MenuItem key={index} value={index}>{item}</MenuItem>\n                            )};\n                        </Select>\n                        <FormHelperText>Required</FormHelperText>\n                    </FormControl>\n\n                    <Button \n                        disabled={btnState}\n                        variant=\"contained\" \n                        id=\"visualiseButton\"\n                        className={classes.button} \n                        color=\"default\"\n                        onClick={this.handleVisualiseButtonPress}\n                    >\n                        Visualize Satellite Positions\n                    </Button>\n                </div>\n\n                <div>\n                    <TableContainer component={Paper} className={classes.tableContainerPaper}>\n                        {/* <div>{launchSelectValue}</div> */}\n                        <Table \n                            stickyHeader\n                            className={classes.table} \n                            size=\"small\" \n                            aria-label=\"a dense table\"\n                        >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.tableHeader}/>\n                                <TableCell className={classes.tableHeader}>Satellite&nbsp;ID</TableCell>\n                                <TableCell className={classes.tableHeader} >Sat&nbsp;Name</TableCell>\n                                <TableCell className={classes.tableHeader} >Position&nbsp;(X)</TableCell>\n                                <TableCell className={classes.tableHeader} >Position&nbsp;(X)</TableCell>\n                                <TableCell className={classes.tableHeader} >Position&nbsp;(X)</TableCell>\n                                <TableCell className={classes.tableHeader} >Velocity&nbsp;(X)</TableCell>\n                                <TableCell className={classes.tableHeader} >Velocity&nbsp;(X)</TableCell>\n                                <TableCell className={classes.tableHeader} >Velocity&nbsp;(X)</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {satTrackingData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                                <Row key={row.name} row={row} />\n                           ))}\n                        </TableBody>\n                        </Table>\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25, 50]}\n                            component=\"div\"\n                            count={satTrackingData.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={this.handleChangePage}\n                            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                        />\n                    </TableContainer>\n                </div>\n\n            </div>\n        );\n    }\n};\n\n// SatTableComponents.propTypes = {\n//     classes: PropTypes.object.isRequired,\n//   };\n\nexport default withStyles(styles)(SatTableComponents)\n"]},"metadata":{},"sourceType":"module"}